stages:
  - build
  - release

variables:
  DOCKER_HOST: "tcp://docker:2376"
  DOCKER_TLS_VERIFY: "1"
  DOCKER_CERT_PATH: "/certs/client"
  DOCKER_IMAGE: "prplanit/apt-cacher-ng-oci"
  DOCKER_TAG: "$CI_COMMIT_TAG"
  GIT_TAG: "$CI_COMMIT_TAG"
  GITLAB_DOMAIN: "https://gitlab.prplanit.com"
  DOCKER_TLS_CERTDIR: "/certs"

build-image:
  stage: build
  image: docker:24.0.5
  services:
    - name: docker:24.0.5-dind
      alias: docker
  before_script:
    - echo "Preparing Docker build..."
    - apk add --no-cache bash git
    - ls -l "$DOCKER_CERT_PATH"  # Debug: Show certs
  script:
    - echo "Building Docker image $DOCKER_IMAGE:$DOCKER_TAG..."
    - docker version
    - docker build -t "$DOCKER_IMAGE:$DOCKER_TAG" .
    - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
    - docker push "$DOCKER_IMAGE:$DOCKER_TAG"
  rules:
    - if: $CI_COMMIT_TAG

create-release:
  stage: release
  image: alpine:3.22.1
  before_script:  |
    echo "---------------------------------------------------------------------------"
    echo "AntParade GitOps 🐜 - Preparing $CI_JOB_IMAGE image for release upload tasks"
    echo "---------------------------------------------------------------------------"
    echo "Installing dependencies... (bash curl jq)"
    apk add --no-cache bash curl jq
  script:  |
    echo "Creating GitLab release for tag $CI_COMMIT_TAG..."
    DOCKER_IMAGE_LINK="https://hub.docker.com/r/$DOCKER_HUB_USERNAME/$CI_PROJECT_NAME/tags?page=1&name=$CI_COMMIT_TAG"

    echo "Creating GitLab release with notes and Docker image link..."
    curl --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
      --request POST \
      --header "Content-Type: application/json" \
      --data "{
        \"name\": \"Release $CI_COMMIT_TAG\",
        \"tag_name\": \"$CI_COMMIT_TAG\",
        \"description\": $RELEASE_NOTES,
        \"assets\": {
          \"links\": [
            {
              \"name\": \"Docker Image $CI_COMMIT_TAG\",
              \"url\": \"$DOCKER_IMAGE_LINK\"
            }
          ]
        }
      }" \
      "$CI_API_V4_URL/projects/$CI_PROJECT_ID/releases"

generate_release_notes:
  before_script:
    - chmod +x ./scripts/release-notes.sh
  image: alpine:3.22.1
  stage: release
  variables:
    GIT_TAG: "$CI_COMMIT_TAG"
  script:
    - apk add --no-cache git bash
    - ./scripts/release-notes.sh > release.md
  only:
    - tags