stages:
  - build
  - release

variables:
  DOCKER_DNS: "127.0.0.1"
  # DOCKER_HOST: tcp://dind:2376
  DOCKER_IMAGE: "prplanit/apt-cacher-ng"
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_TLS_VERIFY: "1"
  GITLAB_DOMAIN: "https://gitlab.prplanit.com"
  DOCKER_TAG: "$CI_COMMIT_TAG"
  GIT_TAG: "$CI_COMMIT_TAG"

build-image:
  stage: build
  image: docker:24.0.5
  services:
  - name: docker:dind
    alias: dind
    volumes:
      - /certs/client
  before_script:
    - docker info
  script:
    - docker build -t $DOCKER_IMAGE:$DOCKER_TAG .
    - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
    - docker push $DOCKER_IMAGE:$DOCKER_TAG

create-release:
  stage: release
  image: alpine:3.22.1
  before_script:  |
    echo "---------------------------------------------------------------------------"
    echo "AntParade GitOps 🐜 - Preparing $CI_JOB_IMAGE image for release upload tasks"
    echo "---------------------------------------------------------------------------"
    echo "Installing dependencies... (bash curl jq)"
    apk add --no-cache bash curl jq
  script:  |
    echo "Creating GitLab release for tag $CI_COMMIT_TAG..."
    curl --header "PRIVATE-TOKEN: $GITLAB_TOKEN" --request POST \
      --form "name=Release $CI_COMMIT_TAG" \
      --form "tag_name=$CI_COMMIT_TAG" \
      --form "description=AntParade GitOps 🐜 - $CI_PROJECT_NAME:$CI_COMMIT_TAG Docker image." \
      "$CI_API_V4_URL/projects/$CI_PROJECT_ID/releases" || echo "Release might already exist"    # Add Docker Hub release asset link

    DOCKER_HUB_LINK="https://hub.docker.com/r/prplanit/apt-cacher-ng-oci/tags?page=1&name=$CI_COMMIT_TAG"

    curl --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
      --request POST \
      --header "Content-Type: application/json" \
      --data "{\"name\":\"Docker Hub Image ($CI_COMMIT_TAG)\",\"url\":\"$DOCKER_HUB_LINK\",\"link_type\":\"image\"}" \
      "$CI_API_V4_URL/projects/$CI_PROJECT_ID/releases/$CI_COMMIT_TAG/assets/links"
  rules:
    - if: $CI_COMMIT_TAG

generate_release_notes:
  image: alpine:3.22.1
  stage: release
  variables:
    GIT_TAG: "$CI_COMMIT_TAG"
  script:
    - apk add --no-cache git bash
    - ./scripts/release-notes.sh > release.md
  only:
    - tags